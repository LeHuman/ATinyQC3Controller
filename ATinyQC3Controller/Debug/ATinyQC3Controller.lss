
ATinyQC3Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000110  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  00000184  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000420  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003e8  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f2  00000000  00000000  000009f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	6b c0       	rjmp	.+214    	; 0xde <__vector_3>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	a4 36       	cpi	r26, 0x64	; 100
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	3c d0       	rcall	.+120    	; 0xb4 <main>
  3c:	67 c0       	rjmp	.+206    	; 0x10c <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <blink>:
  40:	84 e0       	ldi	r24, 0x04	; 4
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	c4 9a       	sbi	0x18, 4	; 24
  46:	ef eb       	ldi	r30, 0xBF	; 191
  48:	fd e5       	ldi	r31, 0x5D	; 93
  4a:	31 97       	sbiw	r30, 0x01	; 1
  4c:	f1 f7       	brne	.-4      	; 0x4a <blink+0xa>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <blink+0x10>
  50:	00 00       	nop
  52:	c4 98       	cbi	0x18, 4	; 24
  54:	ef eb       	ldi	r30, 0xBF	; 191
  56:	fd e5       	ldi	r31, 0x5D	; 93
  58:	31 97       	sbiw	r30, 0x01	; 1
  5a:	f1 f7       	brne	.-4      	; 0x58 <blink+0x18>
  5c:	00 c0       	rjmp	.+0      	; 0x5e <blink+0x1e>
  5e:	00 00       	nop
  60:	01 97       	sbiw	r24, 0x01	; 1
  62:	81 f7       	brne	.-32     	; 0x44 <blink+0x4>
  64:	08 95       	ret

00000066 <btnWait>:
  66:	85 b1       	in	r24, 0x05	; 5
  68:	81 3f       	cpi	r24, 0xF1	; 241
  6a:	10 f4       	brcc	.+4      	; 0x70 <btnWait+0xa>
  6c:	36 9a       	sbi	0x06, 6	; 6
  6e:	fb cf       	rjmp	.-10     	; 0x66 <btnWait>
  70:	08 95       	ret

00000072 <slowBlink>:
  72:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  76:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  7a:	21 e0       	ldi	r18, 0x01	; 1
  7c:	30 e0       	ldi	r19, 0x00	; 0
  7e:	00 97       	sbiw	r24, 0x00	; 0
  80:	11 f0       	breq	.+4      	; 0x86 <slowBlink+0x14>
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  8a:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
  8e:	89 2b       	or	r24, r25
  90:	11 f4       	brne	.+4      	; 0x96 <slowBlink+0x24>
  92:	c4 9a       	sbi	0x18, 4	; 24
  94:	01 c0       	rjmp	.+2      	; 0x98 <slowBlink+0x26>
  96:	c4 98       	cbi	0x18, 4	; 24
  98:	8f e4       	ldi	r24, 0x4F	; 79
  9a:	93 ec       	ldi	r25, 0xC3	; 195
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <slowBlink+0x2a>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <slowBlink+0x30>
  a2:	00 00       	nop
  a4:	08 95       	ret

000000a6 <setVoltage>:
  a6:	df df       	rcall	.-66     	; 0x66 <btnWait>
  a8:	e4 df       	rcall	.-56     	; 0x72 <slowBlink>
  aa:	36 9a       	sbi	0x06, 6	; 6
  ac:	85 b1       	in	r24, 0x05	; 5
  ae:	81 3f       	cpi	r24, 0xF1	; 241
  b0:	d8 f7       	brcc	.-10     	; 0xa8 <setVoltage+0x2>
  b2:	c6 cf       	rjmp	.-116    	; 0x40 <blink>

000000b4 <main>:
  b4:	88 e1       	ldi	r24, 0x18	; 24
  b6:	87 bb       	out	0x17, r24	; 23
  b8:	3d 9a       	sbi	0x07, 5	; 7
  ba:	85 e8       	ldi	r24, 0x85	; 133
  bc:	86 b9       	out	0x06, r24	; 6
  be:	38 98       	cbi	0x07, 0	; 7
  c0:	36 9a       	sbi	0x06, 6	; 6
  c2:	8f e9       	ldi	r24, 0x9F	; 159
  c4:	9f e0       	ldi	r25, 0x0F	; 15
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x12>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x18>
  cc:	00 00       	nop
  ce:	36 9a       	sbi	0x06, 6	; 6
  d0:	85 b1       	in	r24, 0x05	; 5
  d2:	81 3f       	cpi	r24, 0xF1	; 241
  d4:	e0 f7       	brcc	.-8      	; 0xce <main+0x1a>
  d6:	b4 df       	rcall	.-152    	; 0x40 <blink>
  d8:	e6 df       	rcall	.-52     	; 0xa6 <setVoltage>
  da:	c5 df       	rcall	.-118    	; 0x66 <btnWait>
  dc:	f8 cf       	rjmp	.-16     	; 0xce <main+0x1a>

000000de <__vector_3>:
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	8f 93       	push	r24
  ea:	9f 93       	push	r25
  ec:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <savedTime>
  f0:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <savedTime+0x1>
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <savedTime+0x1>
  fa:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <savedTime>
  fe:	9f 91       	pop	r25
 100:	8f 91       	pop	r24
 102:	0f 90       	pop	r0
 104:	0f be       	out	0x3f, r0	; 63
 106:	0f 90       	pop	r0
 108:	1f 90       	pop	r1
 10a:	18 95       	reti

0000010c <_exit>:
 10c:	f8 94       	cli

0000010e <__stop_program>:
 10e:	ff cf       	rjmp	.-2      	; 0x10e <__stop_program>
